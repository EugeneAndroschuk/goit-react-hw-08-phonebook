{"version":3,"file":"static/js/216.7f9592f1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactFormEdit/ContactFormEdit.module.css?74a7","components/ContactFormEdit/ContactFormEdit.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formTitle\":\"ContactForm_formTitle__N6O4g\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/thunks';\nimport { getContacts } from 'redux/selectors';\nimport { Paper, TextField, Button } from '@mui/material';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = (props) => {\n  const[name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactsFromStore = useSelector(getContacts);\n  const patternNumber = '[0-9]{3}-[0-9]{2}-[0-9]{2}';\n  \n  // \\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\n  // ^\\+\\d{2} \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const isExist = contactsFromStore.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`${name} is already in Contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n    props.onCloseModal();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name': setName(value);\n        break;\n      case 'number': setNumber(value);\n        break;\n      default: break;\n    }\n  };\n\n    return (\n      <Paper elevation={24} className={css.form}>\n        <form onSubmit={handleFormSubmit}>\n          <h2 className={css.formTitle}>enter CONTACT DATA</h2>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Name\"\n            name=\"name\"\n            value={name}\n            autoComplete=\"name\"\n            autoFocus\n            onChange={handleInputChange}\n            inputProps={{\n              pattern:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              title:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            }}\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"tel\"\n            label=\"number\"\n            name=\"number\"\n            value={number}\n            autoComplete=\"phone number\"\n            autoFocus\n            onChange={handleInputChange}\n            inputProps={{\n              pattern: `${patternNumber}`,\n              title:\n                'Phone number must be in 111-11-11 format',\n            }}\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add Contact\n          </Button>\n        </form>\n      </Paper>\n    );\n}\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nimport { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '300px',\n      '&:focus': {\n        width: '310px',\n      },\n    },\n  },\n}));\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Search sx={{ backgroundColor: '#e0e0e0' }}>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        placeholder=\"Find contacts by name…\"\n        inputProps={{ 'aria-label': 'search' }}\n        onChange={e => dispatch(updateFilter(e.currentTarget.value))}\n      />\n    </Search>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactFormEdit_form__+Zt11\",\"formTitle\":\"ContactFormEdit_formTitle__bs0ZH\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/thunks';\nimport { getContacts } from 'redux/selectors';\nimport { Paper, TextField, Button } from '@mui/material';\nimport css from \"./ContactFormEdit.module.css\"\n\nconst ContactFormEdit = ({ contact, onCloseModal }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const dispatch = useDispatch();\n  const contactsFromStore = useSelector(getContacts);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const isExist = contactsFromStore.some(\n      item => (item.name.toLowerCase() === name.toLowerCase()) && (item.id !== contact.id)\n    );\n\n    if (isExist) {\n      alert(`${name} is already in Contacts!`);\n      return;\n    }\n\n    dispatch(updateContact({ contactId: contact.id, name, number }));\n    setName('');\n    setNumber('');\n    onCloseModal();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Paper elevation={24} className={css.form}>\n      <form onSubmit={handleFormSubmit}>\n        <h2 className={css.formTitle}>edit CONTACT DATA</h2>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          value={name}\n          autoComplete=\"name\"\n          autoFocus\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          type=\"tel\"\n          label=\"number\"\n          name=\"number\"\n          value={number}\n          autoComplete=\"phone number\"\n          autoFocus\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Save Changes\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nContactFormEdit.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactFormEdit;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  Avatar,\n  Typography,\n  Box,\n  SpeedDial,\n  SpeedDialIcon,\n  SpeedDialAction,\n  Dialog,\n  DialogContent,\n} from '@mui/material';\nimport { deepOrange } from '@mui/material/colors';\nimport {\n  DeleteForeverOutlined,\n  EditOutlined,\n  Share,\n  PhoneAndroidOutlined,\n} from '@mui/icons-material';\nimport ContactFormEdit from 'components/ContactFormEdit/ContactFormEdit';\n\nconst ContactListItem = (props) => {\n  const { contact, onDeleteContact } = props;\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n  const actions = [\n    {\n      icon: (\n        <DeleteForeverOutlined\n          onClick={() => onDeleteContact(contact.id)}\n          fontSize=\"large\"\n          sx={{ color: 'red' }}\n        />\n      ),\n      name: 'Delete Contact',\n    },\n    {\n      icon: (\n        <EditOutlined\n          fontSize=\"large\"\n          sx={{ color: 'green' }}\n          onClick={() => onEditContact(contact.id)}\n        />\n      ),\n      name: 'Edit Contact',\n    },\n    {\n      icon: <Share fontSize=\"large\" sx={{ color: 'blue' }} />,\n      name: 'Share Contact',\n    },\n  ];\n\n  function onEditContact(id) {\n    setOpen(true);\n  };\n\n  function stringAvatar(name) {\n    const formattedName = name.split(' ');\n    if (formattedName.length === 1) return {\n      children: `${name.split(' ')[0][0]}`,\n    }; else return {\n      children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n  }\n\n  return (\n    <Card sx={{ padding: '16px', width: '300px' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Avatar\n          {...stringAvatar(`${contact.name}`)}\n          sx={{\n            width: 56,\n            height: 56,\n            bgcolor: deepOrange[500],\n            marginRight: '10px',\n          }}\n        />\n        <Typography variant=\"h5\" component=\"span\">\n          {contact.name}\n        </Typography>\n      </Box>\n\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          paddingTop: '8px',\n          paddingBottom: '8px',\n        }}\n      >\n        <Avatar\n          sx={{\n            width: 56,\n            height: 56,\n            bgcolor: 'green',\n            marginRight: '10px',\n          }}\n        >\n          <PhoneAndroidOutlined fontSize=\"large\" />\n        </Avatar>\n        <Typography variant=\"h5\" component=\"span\">\n          {contact.number}\n        </Typography>\n      </Box>\n\n      <SpeedDial\n        ariaLabel=\"SpeedDial basic example\"\n        // sx={{ width: 36, height: 36 }}\n        icon={<SpeedDialIcon />}\n        direction={'right'}\n      >\n        {actions.map(action => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n          />\n        ))}\n      </SpeedDial>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <DialogContent>\n          <ContactFormEdit onCloseModal={handleClose} contact={contact} />\n        </DialogContent>\n      </Dialog>\n    </Card>\n  );\n};\n\nContactListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/thunks';\nimport { getContacts, getIsLoading, getFilter } from 'redux/selectors';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport Loader from 'components/Loader/Loader';\nimport { Grid } from '@mui/material';\n\nconst ContactList = () => {\n  const contactsFromStore = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const filterQuery = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = getFilteredContacts(contactsFromStore);\n  \n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  function getFilteredContacts(contacts) {\n    const normFilter = filterQuery.toLowerCase();\n\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normFilter)\n      );\n  }\n\n  return (\n    <>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(contact => (\n            <Grid item xs={6} sm={4} md={4} key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                onDeleteContact={onDeleteContact}\n              />\n            </Grid>\n          ))}\n      </Grid>\n      {isLoading && <Loader />}\n    </>\n  );\n}\n\nexport default ContactList;","import { useState } from \"react\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport {\n  Divider,\n  IconButton,\n  Tooltip,\n  DialogContent,\n  styled,\n  Dialog,\n} from '@mui/material';\nimport ContactPhoneOutlinedIcon from '@mui/icons-material/ContactPhoneOutlined';\nimport commonCss from '../css/common.module.css';\nimport css from \"./Pages.module.css\";\n\nconst ColorButton = styled(IconButton)(({ theme }) => ({\n  // backgroundColor: 'orange',\n  '&:hover': {\n    backgroundColor: 'orangered',\n  },\n}));\n\nconst Contacts = () => {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div className={commonCss.container}>\n      <div className={css.filter}>\n        <Filter />\n      </div>\n\n      <Divider sx={{ marginBottom: '16px' }} />\n\n      <div className={css.contactList}>\n        <ContactList />\n      </div>\n\n      <Tooltip title=\"Add New Contact\" placement=\"top\">\n        <ColorButton\n          aria-label=\"add contact\"\n          sx={{\n            bgcolor: 'orange',\n            width: '108px',\n            height: '108px',\n            position: 'fixed',\n            bottom: '32px',\n            right: '32px',\n          }}\n          onClick={handleOpen}\n        >\n          <ContactPhoneOutlinedIcon fontSize=\"large\" />\n        </ColorButton>\n      </Tooltip>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <DialogContent>\n          <ContactForm onCloseModal={handleClose} />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"homeTitle\":\"Pages_homeTitle__g-Pd-\",\"bgdImg\":\"Pages_bgdImg__KYlld\",\"contactList\":\"Pages_contactList__--j4G\",\"filter\":\"Pages_filter__aR88D\"};"],"names":["props","useState","name","setName","number","setNumber","dispatch","useDispatch","contactsFromStore","useSelector","getContacts","handleInputChange","e","currentTarget","value","Paper","elevation","className","css","onSubmit","preventDefault","some","contact","toLowerCase","alert","addContact","onCloseModal","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","inputProps","pattern","title","type","Button","variant","sx","mt","mb","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","placeholder","updateFilter","item","id","updateContact","contactId","onDeleteContact","open","setOpen","handleClose","actions","icon","DeleteForeverOutlined","onClick","fontSize","EditOutlined","Share","Card","Box","Avatar","split","length","children","bgcolor","deepOrange","marginRight","Typography","component","paddingTop","paddingBottom","PhoneAndroidOutlined","SpeedDial","ariaLabel","SpeedDialIcon","direction","map","action","SpeedDialAction","tooltipTitle","Dialog","onClose","DialogContent","isLoading","getIsLoading","filterQuery","getFilter","useEffect","fetchContacts","filteredContacts","contacts","normFilter","filter","includes","getFilteredContacts","deleteContact","Grid","container","rowSpacing","columnSpacing","xs","sm","md","Loader","ColorButton","IconButton","commonCss","Divider","marginBottom","Tooltip","placement","bottom","right","ContactPhoneOutlined"],"sourceRoot":""}